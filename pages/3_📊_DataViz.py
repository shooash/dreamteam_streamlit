from zipfile import ZIP_DEFLATED, ZipFile
import streamlit as st
import exploration as ex
import pandas as pd
import pickle

st.set_page_config(page_title="Visualisation de donn√©es", page_icon="üìä")
last_key=0
st.sidebar.write('## **Visualisation de donn√©es**')
pages = ['Entreprises', 'Salaires']
page = st.sidebar.radio('Presenter les graphiques sur:', pages)

@st.cache_data
def charger_dataset():
    df_communes = ex.get_df_communes() 
    df_deps = ex.get_df_dep(df_communes)
    return df_communes, df_deps

@st.cache_resource
def charger_carte(df_communes, df_deps):
    result = ex.get_geo_map(df_communes, df_deps)
    return result

@st.cache_resource
def charger_carte_gini():
    merged_clean_missing_salary = ex.prepare_vin()
    '''
    ### Cartographie du coefficient de Gini sur le salaire mensuel net par d√©partement
    
    L'objectif de ce coefficient est de visualiser s'il y a une forte disparit√© de salaire au sein d'un m√™me d√©partement. √Ä la vue de la carte, ce sont les d√©partements proches de la r√©gion d'√Æle de France qui ont une forte disparit√© de salaire mensuel moyen entre les villes. Le m√™me constat est fait pour quelques d√©partements situ√©s dans le sud-est de la France et en Rh√¥ne-Alpes. Deux d√©partements ont une r√©partition tr√®s homog√®ne du salaire moyen. Il s'agit de la Loz√®re et du d√©partement Haute-Marne. De fa√ßon globale ,la disparit√© de salaire moyen par ville reste assez faible car le coefficient de gini est born√© sur l'intervalle [0,1]. Plus ce coefficient tend vers 1 et plus la disparit√© est forte dans le regroupement de donn√©es. Plus ce coefficient tend vers 0 est moins l'in√©galit√© est forte.
    '''
    st.write(ex.map_salaire_gini(merged_clean_missing_salary, show=False))
    '''
    ### Cartographie repr√©sentant le salaire moyen par d√©partement
    
    Ici nous pouvons voir qu'il y a une forte concentration des salaires √©lev√©s dans les d√©partements composant l'√Æle de France. Il y a une concentration des hauts salaires aussi situ√©e dans le sud-est de la France ainsi que certains d√©partements de Rh√¥ne-Alpes. Le reste des d√©partements ont un salaire annuel faible.
    '''
    st.write(ex.map_salaire(merged_clean_missing_salary, show=False))

if page == pages[0]:
    df_communes, df_deps = charger_dataset() 
    col_entreprises = ['brut', 'zero', 'pme', 'mic', 'eti_ge']
    col_couples = [i for i in df_communes.columns.to_list() if i.startswith('couple')]
    col_seuls = [i for i in df_communes.columns.to_list() if i.startswith('seul')]
    col_enfants = [i for i in df_communes.columns.to_list() if i.startswith('enfant')]
    col_etrangers = [i for i in df_communes.columns.to_list() if i.startswith('etranger')]
    col_population = col_couples + col_seuls + col_enfants + col_etrangers
    col_base = ['net', 'population']
    # On veut pas garder certain chiffre en absolut
    df_communes_norm = ex.normalize_stats(df_communes, col_entreprises, 'net')
    df_communes_norm = ex.normalize_stats(df_communes_norm, col_population, 'population')
    df_communes_norm = df_communes_norm.drop(['longitude', 'latitude'], axis = 1)
    col_entreprises = ['brut', 'zero', 'pme', 'mic', 'eti_ge']
    col_population = col_couples + col_seuls + col_enfants + col_etrangers
    df_deps_norm = ex.normalize_stats(df_deps, col_entreprises, 'net')
    df_deps_norm = ex.normalize_stats(df_deps_norm, col_population, 'population')
    df_deps_norm = df_deps_norm.drop(['longitude', 'latitude'], axis = 1)
    # ajouter les '*' aux noms des colonnes normaliz√©es
    col_couples = ex.normalize_names(col_couples)
    col_seuls = ex.normalize_names(col_seuls)
    col_enfants = ex.normalize_names(col_enfants)
    col_etrangers = ex.normalize_names(col_etrangers)

    '# _French Industry_: preuves d\'in√©galit√© en France'
    '## Visualisation de donn√©es : Entreprises'
    '''
    Le dataset *base_etablissement_par_tranche_effectif* pr√©sente des groupes tr√®s diff√©rents de donn√©es. Apr√®s la phase de pr√©paration on assemble dans un m√™me tableau les chiffres relatifs √† la population, le nombre d'entreprises total (¬´net¬ª), micro entreprises, PME, ETI et GE. Cela nous permet de v√©rifier s'il existe une corr√©lation entre ces valeurs par communes et par d√©partements.
    '''
    if st.checkbox("Afficher les matrix de correlation pour les **entreprises**", key = (last_key := last_key+1)):
        title_matrix_com = "Correlation des donn√©es sur les entreprises dans les commune fran√ßaises sauf DOM/TOM"
        st.write(ex.get_corr_matrix(df_communes_norm[col_entreprises + col_base + col_couples], title_matrix_com, angle=-45))
        st.write(ex.get_corr_matrix(df_communes_norm[col_entreprises + col_base + col_seuls], title_matrix_com, angle=-45))
        #st.write(ex.get_corr_matrix(df_communes_norm[col_entreprises + col_base + col_enfants], title_matrix_com, angle=-45))
        #st.write(ex.get_corr_matrix(df_communes_norm[col_entreprises + col_base + col_etrangers], title_matrix_com, angle=-45))
        # Au niveau departementale:
        title_matrix_dep = "Correlation des donn√©es sur les entreprises dans les d√©partements fran√ßais sauf DOM/TOM"
        st.write(ex.get_corr_matrix(df_deps_norm[col_entreprises + col_base + col_couples], title_matrix_dep, angle=-45))
        st.write(ex.get_corr_matrix(df_deps_norm[col_entreprises + col_base + col_seuls], title_matrix_dep, angle=-45))
        #st.write(ex.get_corr_matrix(df_deps_norm[col_entreprises + col_base + col_enfants], title_matrix_dep, angle=-45))
        #st.write(ex.get_corr_matrix(df_deps_norm[col_entreprises + col_base + col_etrangers], title_matrix_dep, angle=-45))
    '''
    L'analyse par quartile d√©montre qu'il s'agit des donn√©es avec une distribution fortement biais√©e car la plupart des communes n'ont pas d'entreprises de certains types. M√™me parmi ceux o√π on a enregistr√© cette activit√© √©conomique on peut constater que la distribution est tr√®s disproportionn√©e.
    '''
    if st.checkbox("Afficher la distribution des entreprises parmi les communes industrialis√©es", key = (last_key := last_key+1)):
        '''
        93.19% de communes n'ont pas d'ETI et GE, parmi les autres:
        '''
        st.write(ex.get_commune_distrib_bars(df_communes[df_communes.eti_ge > 0].eti_ge, "ETI/GE"))
        st.write(ex.get_ent_hist(df_communes[df_communes.eti_ge > 0].eti_ge, "ETI/GE"))
        
        '''
        53.63% de communes n'ont pas de PME, parmi les autres:
        
        '''
        st.write(ex.get_commune_distrib_bars(df_communes[df_communes.pme > 0].pme, "PME"))
        st.write(ex.get_ent_hist(df_communes[df_communes.pme > 0].pme, "PME"))
        '''
        14.89% de communes n'ont pas de micro entreprises, parmi les autres:
        
        '''
        st.write(ex.get_commune_distrib_bars(df_communes[df_communes.mic > 0].mic, "micro entreprises"))
        st.write(ex.get_ent_hist(df_communes[df_communes.mic > 0].mic, "micro entreprises"))
    '''
    L'analyse de la distribution g√©ographique d'entreprises d√©voiles des in√©galit√©s r√©gionales dans la structure d'√©conomie fran√ßaise.
    '''
    st.write(charger_carte(df_communes, df_deps))
    '''
    Sur les cartes on peut bien distinguer plusieurs clast√®res industrielles, notamment √éle-de-France, Vall√©e du Rh√¥ne, Marseille, Toulouse et Lille. La r√©gion parisienne est assez √©videmment dans une situation exclusive, ayant des chiffres d'industrialisation exceptionnels.
    '''
    
if page == pages[1]:
    data_name = 'models/dataviz_salaire'
    try:
        z = ZipFile(data_name, 'r')
        data = pickle.load(z.open(data_name, 'r'))
        z.close()
    except:
        data = ex.get_salaire_data()
        z = ZipFile(data_name, 'w', compression=ZIP_DEFLATED, compresslevel=5)
        pickle.dump(data, z.open(data_name, 'w'))
        z.close()
    '# _French Industry_: preuves d\'in√©galit√© en France'
    '## Visualisation de donn√©es : Salaires'
    
    @st.cache_data
    def corr_plot(col):
        result = ex.plot_region_correlation(data, col, show=False)
        return result 

    @st.cache_resource
    def bokeh_tabs():
        result = ex.get_salaire_bokeh(data, show_plot=False)
        return result 
    @st.cache_data
    def boxplots():
        result = ex.show_boxplots(show=False)
        return result
    
    st.pyplot(corr_plot('SNHM14'))
    st.pyplot(corr_plot('SNHMC14'))
    st.bokeh_chart(bokeh_tabs())
    '''
    Les boxplots nous montrent que les donn√©es sont en g√©n√©ral compact√©es. Elles ont tendance √† s'√©largir et √† avoir une plus grande amplitude lorsqu'on est √¢g√© de plus de 50 ans et que l'on appartient √† une CSP sup√©rieure. Enfin, nous noterons qu'il y a une diff√©rence notable sur la r√©partition des donn√©es et la valeur des donn√©es entre les hommes et les femmes.
    '''
    st.write(boxplots())
    charger_carte_gini()
    '''
    ## Analyse statistique
    '''
    '''
    Toutes les observations graphiques faites se sont av√©r√©es significatives apr√®s v√©rification par Two-sample T-test. Tous les tests ont √©t√© effectu√©s avec des √©chantillons al√©atoires de 1000 individus de chaque population pour simplifier les analyses. Les √©chantillons √©taient tous normalement distribu√©s et les variances des √©chantillons √©taient homog√®nes. Ces tailles d'√©chantillonnages sont suffisantes pour ignorer les potentielles erreurs de type I et II. 
    
    Les salaires net moyen par heure des femmes et des hommes ont √©t√© compar√©s. Les hommes ont en moyenne en France d√©pendamment et ind√©pendamment des r√©gions un salaire plus √©lev√© y compris pour la Martinique et la Guyane qui semblaient moins concern√©es. Cependant, relativement aux autres r√©gions, le salaire des femmes dans ces r√©gions semble plus int√©ressant que celui des hommes en observant le classement des r√©gions pour les deux cat√©gories. Ces diff√©rences significatives s'observent aussi entre les cadres f√©minins et masculins ( T= -7.69, p = 8.31e-27) ainsi que pour les travailleurs et travailleuses (T = -11.8, p = 1.23e-24). Enfin des diff√©rences significatives sont aussi observ√©es entre les tranches d'√¢ges et entre les sexes pour ces diff√©rentes tranches d'√¢ge. Globalement, pour chaque tranche d'√¢ge, les hommes gagnent mieux leur vie que les femmes. Aussi, les salaires moyens sont significativement sup√©rieurs √† chaque cat√©gorie d'√¢ge pour les femmes et pour les hommes. Avec pour r√©sultat de chacun des tests des p-value tr√®s nettement inf√©rieures au seuil fix√© de 0.05.

    '''
